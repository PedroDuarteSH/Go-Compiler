Terminals unused in grammar

    RESERVED


Grammar

    0 $accept: program $end

    1 program: PACKAGE ID SEMICOLON declarations

    2 declarations: %empty
    3             | declarations varDeclaration SEMICOLON
    4             | declarations funcDeclaration SEMICOLON

    5 varDeclaration: VAR varSpec
    6               | VAR LPAR varSpec SEMICOLON RPAR

    7 varSpec: ID commaID type

    8 commaID: %empty
    9        | commaID COMMA ID

   10 type: INT
   11     | FLOAT32
   12     | BOOL
   13     | STRING

   14 funcDeclaration: FUNC ID LPAR RPAR funcBody
   15                | FUNC ID LPAR RPAR type funcBody
   16                | FUNC ID parameters funcBody
   17                | FUNC ID parameters type funcBody

   18 parameters: LPAR ID type comma_ID_Type RPAR

   19 comma_ID_Type: %empty
   20              | comma_ID_Type COMMA ID type

   21 funcBody: LBRACE varsAndStatements RBRACE

   22 varsAndStatements: %empty
   23                  | varsAndStatements SEMICOLON
   24                  | varsAndStatements statement SEMICOLON
   25                  | varsAndStatements varDeclaration SEMICOLON

   26 statement: ID ASSIGN expr
   27          | LBRACE state_SEMI RBRACE
   28          | IF expr LBRACE state_SEMI RBRACE
   29          | IF expr LBRACE state_SEMI RBRACE ELSE LBRACE state_SEMI RBRACE
   30          | FOR expr LBRACE state_SEMI RBRACE
   31          | FOR LBRACE state_SEMI RBRACE
   32          | RETURN
   33          | RETURN expr
   34          | funcInvocation
   35          | parseArgs
   36          | PRINT LPAR STRLIT RPAR
   37          | PRINT LPAR expr RPAR
   38          | error
   39          | error END

   40 state_SEMI: statement SEMICOLON state_SEMI
   41           | %empty

   42 parseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ expr RSQ RPAR
   43          | ID COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR

   44 funcInvocation: ID LPAR RPAR
   45               | ID LPAR expr comma_Expr RPAR
   46               | ID LPAR error RPAR

   47 comma_Expr: %empty
   48           | comma_Expr COMMA expr

   49 expr: expr OR expr
   50     | expr AND expr
   51     | expr LT expr
   52     | expr GT expr
   53     | expr EQ expr
   54     | expr NE expr
   55     | expr LE expr
   56     | expr GE expr
   57     | expr PLUS expr
   58     | expr MINUS expr
   59     | expr STAR expr
   60     | expr DIV expr
   61     | expr MOD expr
   62     | NOT expr
   63     | MINUS expr
   64     | PLUS expr
   65     | INTLIT
   66     | REALLIT
   67     | ID
   68     | funcInvocation
   69     | LPAR expr RPAR
   70     | LPAR error RPAR


Terminals, with rules where they appear

    $end (0) 0
    error (256) 38 39 43 46 70
    RESERVED (258)
    SEMICOLON (259) 1 3 4 6 23 24 25 40
    COMMA (260) 9 20 42 43 48
    BLANKID (261) 42 43
    STAR (262) 59
    DIV (263) 60
    MINUS (264) 58 63
    PLUS (265) 57 64
    EQ (266) 53
    GE (267) 56
    LBRACE (268) 21 27 28 29 30 31
    LE (269) 55
    LPAR (270) 6 14 15 18 36 37 42 43 44 45 46 69 70
    LSQ (271) 42
    MOD (272) 61
    NE (273) 54
    NOT (274) 62
    AND (275) 50
    OR (276) 49
    RBRACE (277) 21 27 28 29 30 31
    RPAR (278) 6 14 15 18 36 37 42 43 44 45 46 69 70
    RSQ (279) 42
    PACKAGE (280) 1
    RETURN (281) 32 33
    ELSE (282) 29
    FOR (283) 30 31
    IF (284) 28 29
    VAR (285) 5 6
    INT (286) 10
    FLOAT32 (287) 11
    BOOL (288) 12
    STRING (289) 13
    PRINT (290) 36 37
    PARSEINT (291) 42 43
    FUNC (292) 14 15 16 17
    CMDARGS (293) 42
    ASSIGN (294) 26 42 43
    GT (295) 52
    LT (296) 51
    ID <string> (297) 1 7 9 14 15 16 17 18 20 26 42 43 44 45 46 67
    STRLIT <string> (298) 36
    REALLIT <string> (299) 66
    INTLIT <string> (300) 65
    END (301) 39


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    program <tree> (48)
        on left: 1
        on right: 0
    declarations <tree> (49)
        on left: 2 3 4
        on right: 1 3 4
    varDeclaration <tree> (50)
        on left: 5 6
        on right: 3 25
    varSpec <tree> (51)
        on left: 7
        on right: 5 6
    commaID <tree> (52)
        on left: 8 9
        on right: 7 9
    type <tree> (53)
        on left: 10 11 12 13
        on right: 7 15 17 18 20
    funcDeclaration <tree> (54)
        on left: 14 15 16 17
        on right: 4
    parameters <tree> (55)
        on left: 18
        on right: 16 17
    comma_ID_Type <tree> (56)
        on left: 19 20
        on right: 18 20
    funcBody <tree> (57)
        on left: 21
        on right: 14 15 16 17
    varsAndStatements <tree> (58)
        on left: 22 23 24 25
        on right: 21 23 24 25
    statement <tree> (59)
        on left: 26 27 28 29 30 31 32 33 34 35 36 37 38 39
        on right: 24 40
    state_SEMI <tree> (60)
        on left: 40 41
        on right: 27 28 29 30 31 40
    parseArgs <tree> (61)
        on left: 42 43
        on right: 35
    funcInvocation <tree> (62)
        on left: 44 45 46
        on right: 34 68
    comma_Expr <tree> (63)
        on left: 47 48
        on right: 45 48
    expr <tree> (64)
        on left: 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
        on right: 26 28 29 30 33 37 42 45 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 69


State 0

    0 $accept: . program $end

    PACKAGE  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PACKAGE . ID SEMICOLON declarations

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: PACKAGE ID . SEMICOLON declarations

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: PACKAGE ID SEMICOLON . declarations

    $default  reduce using rule 2 (declarations)

    declarations  go to state 6


State 6

    1 program: PACKAGE ID SEMICOLON declarations .
    3 declarations: declarations . varDeclaration SEMICOLON
    4             | declarations . funcDeclaration SEMICOLON

    VAR   shift, and go to state 7
    FUNC  shift, and go to state 8

    $default  reduce using rule 1 (program)

    varDeclaration   go to state 9
    funcDeclaration  go to state 10


State 7

    5 varDeclaration: VAR . varSpec
    6               | VAR . LPAR varSpec SEMICOLON RPAR

    LPAR  shift, and go to state 11
    ID    shift, and go to state 12

    varSpec  go to state 13


State 8

   14 funcDeclaration: FUNC . ID LPAR RPAR funcBody
   15                | FUNC . ID LPAR RPAR type funcBody
   16                | FUNC . ID parameters funcBody
   17                | FUNC . ID parameters type funcBody

    ID  shift, and go to state 14


State 9

    3 declarations: declarations varDeclaration . SEMICOLON

    SEMICOLON  shift, and go to state 15


State 10

    4 declarations: declarations funcDeclaration . SEMICOLON

    SEMICOLON  shift, and go to state 16


State 11

    6 varDeclaration: VAR LPAR . varSpec SEMICOLON RPAR

    ID  shift, and go to state 12

    varSpec  go to state 17


State 12

    7 varSpec: ID . commaID type

    $default  reduce using rule 8 (commaID)

    commaID  go to state 18


State 13

    5 varDeclaration: VAR varSpec .

    $default  reduce using rule 5 (varDeclaration)


State 14

   14 funcDeclaration: FUNC ID . LPAR RPAR funcBody
   15                | FUNC ID . LPAR RPAR type funcBody
   16                | FUNC ID . parameters funcBody
   17                | FUNC ID . parameters type funcBody

    LPAR  shift, and go to state 19

    parameters  go to state 20


State 15

    3 declarations: declarations varDeclaration SEMICOLON .

    $default  reduce using rule 3 (declarations)


State 16

    4 declarations: declarations funcDeclaration SEMICOLON .

    $default  reduce using rule 4 (declarations)


State 17

    6 varDeclaration: VAR LPAR varSpec . SEMICOLON RPAR

    SEMICOLON  shift, and go to state 21


State 18

    7 varSpec: ID commaID . type
    9 commaID: commaID . COMMA ID

    COMMA    shift, and go to state 22
    INT      shift, and go to state 23
    FLOAT32  shift, and go to state 24
    BOOL     shift, and go to state 25
    STRING   shift, and go to state 26

    type  go to state 27


State 19

   14 funcDeclaration: FUNC ID LPAR . RPAR funcBody
   15                | FUNC ID LPAR . RPAR type funcBody
   18 parameters: LPAR . ID type comma_ID_Type RPAR

    RPAR  shift, and go to state 28
    ID    shift, and go to state 29


State 20

   16 funcDeclaration: FUNC ID parameters . funcBody
   17                | FUNC ID parameters . type funcBody

    LBRACE   shift, and go to state 30
    INT      shift, and go to state 23
    FLOAT32  shift, and go to state 24
    BOOL     shift, and go to state 25
    STRING   shift, and go to state 26

    type      go to state 31
    funcBody  go to state 32


State 21

    6 varDeclaration: VAR LPAR varSpec SEMICOLON . RPAR

    RPAR  shift, and go to state 33


State 22

    9 commaID: commaID COMMA . ID

    ID  shift, and go to state 34


State 23

   10 type: INT .

    $default  reduce using rule 10 (type)


State 24

   11 type: FLOAT32 .

    $default  reduce using rule 11 (type)


State 25

   12 type: BOOL .

    $default  reduce using rule 12 (type)


State 26

   13 type: STRING .

    $default  reduce using rule 13 (type)


State 27

    7 varSpec: ID commaID type .

    $default  reduce using rule 7 (varSpec)


State 28

   14 funcDeclaration: FUNC ID LPAR RPAR . funcBody
   15                | FUNC ID LPAR RPAR . type funcBody

    LBRACE   shift, and go to state 30
    INT      shift, and go to state 23
    FLOAT32  shift, and go to state 24
    BOOL     shift, and go to state 25
    STRING   shift, and go to state 26

    type      go to state 35
    funcBody  go to state 36


State 29

   18 parameters: LPAR ID . type comma_ID_Type RPAR

    INT      shift, and go to state 23
    FLOAT32  shift, and go to state 24
    BOOL     shift, and go to state 25
    STRING   shift, and go to state 26

    type  go to state 37


State 30

   21 funcBody: LBRACE . varsAndStatements RBRACE

    $default  reduce using rule 22 (varsAndStatements)

    varsAndStatements  go to state 38


State 31

   17 funcDeclaration: FUNC ID parameters type . funcBody

    LBRACE  shift, and go to state 30

    funcBody  go to state 39


State 32

   16 funcDeclaration: FUNC ID parameters funcBody .

    $default  reduce using rule 16 (funcDeclaration)


State 33

    6 varDeclaration: VAR LPAR varSpec SEMICOLON RPAR .

    $default  reduce using rule 6 (varDeclaration)


State 34

    9 commaID: commaID COMMA ID .

    $default  reduce using rule 9 (commaID)


State 35

   15 funcDeclaration: FUNC ID LPAR RPAR type . funcBody

    LBRACE  shift, and go to state 30

    funcBody  go to state 40


State 36

   14 funcDeclaration: FUNC ID LPAR RPAR funcBody .

    $default  reduce using rule 14 (funcDeclaration)


State 37

   18 parameters: LPAR ID type . comma_ID_Type RPAR

    $default  reduce using rule 19 (comma_ID_Type)

    comma_ID_Type  go to state 41


State 38

   21 funcBody: LBRACE varsAndStatements . RBRACE
   23 varsAndStatements: varsAndStatements . SEMICOLON
   24                  | varsAndStatements . statement SEMICOLON
   25                  | varsAndStatements . varDeclaration SEMICOLON

    error      shift, and go to state 42
    SEMICOLON  shift, and go to state 43
    LBRACE     shift, and go to state 44
    RBRACE     shift, and go to state 45
    RETURN     shift, and go to state 46
    FOR        shift, and go to state 47
    IF         shift, and go to state 48
    VAR        shift, and go to state 7
    PRINT      shift, and go to state 49
    ID         shift, and go to state 50

    varDeclaration  go to state 51
    statement       go to state 52
    parseArgs       go to state 53
    funcInvocation  go to state 54


State 39

   17 funcDeclaration: FUNC ID parameters type funcBody .

    $default  reduce using rule 17 (funcDeclaration)


State 40

   15 funcDeclaration: FUNC ID LPAR RPAR type funcBody .

    $default  reduce using rule 15 (funcDeclaration)


State 41

   18 parameters: LPAR ID type comma_ID_Type . RPAR
   20 comma_ID_Type: comma_ID_Type . COMMA ID type

    COMMA  shift, and go to state 55
    RPAR   shift, and go to state 56


State 42

   38 statement: error .
   39          | error . END

    END  shift, and go to state 57

    $default  reduce using rule 38 (statement)


State 43

   23 varsAndStatements: varsAndStatements SEMICOLON .

    $default  reduce using rule 23 (varsAndStatements)


State 44

   27 statement: LBRACE . state_SEMI RBRACE

    error   shift, and go to state 42
    LBRACE  shift, and go to state 44
    RETURN  shift, and go to state 46
    FOR     shift, and go to state 47
    IF      shift, and go to state 48
    PRINT   shift, and go to state 49
    ID      shift, and go to state 50

    RBRACE  reduce using rule 41 (state_SEMI)

    statement       go to state 58
    state_SEMI      go to state 59
    parseArgs       go to state 53
    funcInvocation  go to state 54


State 45

   21 funcBody: LBRACE varsAndStatements RBRACE .

    $default  reduce using rule 21 (funcBody)


State 46

   32 statement: RETURN .
   33          | RETURN . expr

    MINUS    shift, and go to state 60
    PLUS     shift, and go to state 61
    LPAR     shift, and go to state 62
    NOT      shift, and go to state 63
    ID       shift, and go to state 64
    REALLIT  shift, and go to state 65
    INTLIT   shift, and go to state 66

    $default  reduce using rule 32 (statement)

    funcInvocation  go to state 67
    expr            go to state 68


State 47

   30 statement: FOR . expr LBRACE state_SEMI RBRACE
   31          | FOR . LBRACE state_SEMI RBRACE

    MINUS    shift, and go to state 60
    PLUS     shift, and go to state 61
    LBRACE   shift, and go to state 69
    LPAR     shift, and go to state 62
    NOT      shift, and go to state 63
    ID       shift, and go to state 64
    REALLIT  shift, and go to state 65
    INTLIT   shift, and go to state 66

    funcInvocation  go to state 67
    expr            go to state 70


State 48

   28 statement: IF . expr LBRACE state_SEMI RBRACE
   29          | IF . expr LBRACE state_SEMI RBRACE ELSE LBRACE state_SEMI RBRACE

    MINUS    shift, and go to state 60
    PLUS     shift, and go to state 61
    LPAR     shift, and go to state 62
    NOT      shift, and go to state 63
    ID       shift, and go to state 64
    REALLIT  shift, and go to state 65
    INTLIT   shift, and go to state 66

    funcInvocation  go to state 67
    expr            go to state 71


State 49

   36 statement: PRINT . LPAR STRLIT RPAR
   37          | PRINT . LPAR expr RPAR

    LPAR  shift, and go to state 72


State 50

   26 statement: ID . ASSIGN expr
   42 parseArgs: ID . COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ expr RSQ RPAR
   43          | ID . COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR
   44 funcInvocation: ID . LPAR RPAR
   45               | ID . LPAR expr comma_Expr RPAR
   46               | ID . LPAR error RPAR

    COMMA   shift, and go to state 73
    LPAR    shift, and go to state 74
    ASSIGN  shift, and go to state 75


State 51

   25 varsAndStatements: varsAndStatements varDeclaration . SEMICOLON

    SEMICOLON  shift, and go to state 76


State 52

   24 varsAndStatements: varsAndStatements statement . SEMICOLON

    SEMICOLON  shift, and go to state 77


State 53

   35 statement: parseArgs .

    $default  reduce using rule 35 (statement)


State 54

   34 statement: funcInvocation .

    $default  reduce using rule 34 (statement)


State 55

   20 comma_ID_Type: comma_ID_Type COMMA . ID type

    ID  shift, and go to state 78


State 56

   18 parameters: LPAR ID type comma_ID_Type RPAR .

    $default  reduce using rule 18 (parameters)


State 57

   39 statement: error END .

    $default  reduce using rule 39 (statement)


State 58

   40 state_SEMI: statement . SEMICOLON state_SEMI

    SEMICOLON  shift, and go to state 79


State 59

   27 statement: LBRACE state_SEMI . RBRACE

    RBRACE  shift, and go to state 80


State 60

   63 expr: MINUS . expr

    MINUS    shift, and go to state 60
    PLUS     shift, and go to state 61
    LPAR     shift, and go to state 62
    NOT      shift, and go to state 63
    ID       shift, and go to state 64
    REALLIT  shift, and go to state 65
    INTLIT   shift, and go to state 66

    funcInvocation  go to state 67
    expr            go to state 81


State 61

   64 expr: PLUS . expr

    MINUS    shift, and go to state 60
    PLUS     shift, and go to state 61
    LPAR     shift, and go to state 62
    NOT      shift, and go to state 63
    ID       shift, and go to state 64
    REALLIT  shift, and go to state 65
    INTLIT   shift, and go to state 66

    funcInvocation  go to state 67
    expr            go to state 82


State 62

   69 expr: LPAR . expr RPAR
   70     | LPAR . error RPAR

    error    shift, and go to state 83
    MINUS    shift, and go to state 60
    PLUS     shift, and go to state 61
    LPAR     shift, and go to state 62
    NOT      shift, and go to state 63
    ID       shift, and go to state 64
    REALLIT  shift, and go to state 65
    INTLIT   shift, and go to state 66

    funcInvocation  go to state 67
    expr            go to state 84


State 63

   62 expr: NOT . expr

    MINUS    shift, and go to state 60
    PLUS     shift, and go to state 61
    LPAR     shift, and go to state 62
    NOT      shift, and go to state 63
    ID       shift, and go to state 64
    REALLIT  shift, and go to state 65
    INTLIT   shift, and go to state 66

    funcInvocation  go to state 67
    expr            go to state 85


State 64

   44 funcInvocation: ID . LPAR RPAR
   45               | ID . LPAR expr comma_Expr RPAR
   46               | ID . LPAR error RPAR
   67 expr: ID .

    LPAR  shift, and go to state 74

    $default  reduce using rule 67 (expr)


State 65

   66 expr: REALLIT .

    $default  reduce using rule 66 (expr)


State 66

   65 expr: INTLIT .

    $default  reduce using rule 65 (expr)


State 67

   68 expr: funcInvocation .

    $default  reduce using rule 68 (expr)


State 68

   33 statement: RETURN expr .
   49 expr: expr . OR expr
   50     | expr . AND expr
   51     | expr . LT expr
   52     | expr . GT expr
   53     | expr . EQ expr
   54     | expr . NE expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . PLUS expr
   58     | expr . MINUS expr
   59     | expr . STAR expr
   60     | expr . DIV expr
   61     | expr . MOD expr

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    EQ     shift, and go to state 90
    GE     shift, and go to state 91
    LE     shift, and go to state 92
    MOD    shift, and go to state 93
    NE     shift, and go to state 94
    AND    shift, and go to state 95
    OR     shift, and go to state 96
    GT     shift, and go to state 97
    LT     shift, and go to state 98

    $default  reduce using rule 33 (statement)


State 69

   31 statement: FOR LBRACE . state_SEMI RBRACE

    error   shift, and go to state 42
    LBRACE  shift, and go to state 44
    RETURN  shift, and go to state 46
    FOR     shift, and go to state 47
    IF      shift, and go to state 48
    PRINT   shift, and go to state 49
    ID      shift, and go to state 50

    RBRACE  reduce using rule 41 (state_SEMI)

    statement       go to state 58
    state_SEMI      go to state 99
    parseArgs       go to state 53
    funcInvocation  go to state 54


State 70

   30 statement: FOR expr . LBRACE state_SEMI RBRACE
   49 expr: expr . OR expr
   50     | expr . AND expr
   51     | expr . LT expr
   52     | expr . GT expr
   53     | expr . EQ expr
   54     | expr . NE expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . PLUS expr
   58     | expr . MINUS expr
   59     | expr . STAR expr
   60     | expr . DIV expr
   61     | expr . MOD expr

    STAR    shift, and go to state 86
    DIV     shift, and go to state 87
    MINUS   shift, and go to state 88
    PLUS    shift, and go to state 89
    EQ      shift, and go to state 90
    GE      shift, and go to state 91
    LBRACE  shift, and go to state 100
    LE      shift, and go to state 92
    MOD     shift, and go to state 93
    NE      shift, and go to state 94
    AND     shift, and go to state 95
    OR      shift, and go to state 96
    GT      shift, and go to state 97
    LT      shift, and go to state 98


State 71

   28 statement: IF expr . LBRACE state_SEMI RBRACE
   29          | IF expr . LBRACE state_SEMI RBRACE ELSE LBRACE state_SEMI RBRACE
   49 expr: expr . OR expr
   50     | expr . AND expr
   51     | expr . LT expr
   52     | expr . GT expr
   53     | expr . EQ expr
   54     | expr . NE expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . PLUS expr
   58     | expr . MINUS expr
   59     | expr . STAR expr
   60     | expr . DIV expr
   61     | expr . MOD expr

    STAR    shift, and go to state 86
    DIV     shift, and go to state 87
    MINUS   shift, and go to state 88
    PLUS    shift, and go to state 89
    EQ      shift, and go to state 90
    GE      shift, and go to state 91
    LBRACE  shift, and go to state 101
    LE      shift, and go to state 92
    MOD     shift, and go to state 93
    NE      shift, and go to state 94
    AND     shift, and go to state 95
    OR      shift, and go to state 96
    GT      shift, and go to state 97
    LT      shift, and go to state 98


State 72

   36 statement: PRINT LPAR . STRLIT RPAR
   37          | PRINT LPAR . expr RPAR

    MINUS    shift, and go to state 60
    PLUS     shift, and go to state 61
    LPAR     shift, and go to state 62
    NOT      shift, and go to state 63
    ID       shift, and go to state 64
    STRLIT   shift, and go to state 102
    REALLIT  shift, and go to state 65
    INTLIT   shift, and go to state 66

    funcInvocation  go to state 67
    expr            go to state 103


State 73

   42 parseArgs: ID COMMA . BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ expr RSQ RPAR
   43          | ID COMMA . BLANKID ASSIGN PARSEINT LPAR error RPAR

    BLANKID  shift, and go to state 104


State 74

   44 funcInvocation: ID LPAR . RPAR
   45               | ID LPAR . expr comma_Expr RPAR
   46               | ID LPAR . error RPAR

    error    shift, and go to state 105
    MINUS    shift, and go to state 60
    PLUS     shift, and go to state 61
    LPAR     shift, and go to state 62
    NOT      shift, and go to state 63
    RPAR     shift, and go to state 106
    ID       shift, and go to state 64
    REALLIT  shift, and go to state 65
    INTLIT   shift, and go to state 66

    funcInvocation  go to state 67
    expr            go to state 107


State 75

   26 statement: ID ASSIGN . expr

    MINUS    shift, and go to state 60
    PLUS     shift, and go to state 61
    LPAR     shift, and go to state 62
    NOT      shift, and go to state 63
    ID       shift, and go to state 64
    REALLIT  shift, and go to state 65
    INTLIT   shift, and go to state 66

    funcInvocation  go to state 67
    expr            go to state 108


State 76

   25 varsAndStatements: varsAndStatements varDeclaration SEMICOLON .

    $default  reduce using rule 25 (varsAndStatements)


State 77

   24 varsAndStatements: varsAndStatements statement SEMICOLON .

    $default  reduce using rule 24 (varsAndStatements)


State 78

   20 comma_ID_Type: comma_ID_Type COMMA ID . type

    INT      shift, and go to state 23
    FLOAT32  shift, and go to state 24
    BOOL     shift, and go to state 25
    STRING   shift, and go to state 26

    type  go to state 109


State 79

   40 state_SEMI: statement SEMICOLON . state_SEMI

    error   shift, and go to state 42
    LBRACE  shift, and go to state 44
    RETURN  shift, and go to state 46
    FOR     shift, and go to state 47
    IF      shift, and go to state 48
    PRINT   shift, and go to state 49
    ID      shift, and go to state 50

    RBRACE  reduce using rule 41 (state_SEMI)

    statement       go to state 58
    state_SEMI      go to state 110
    parseArgs       go to state 53
    funcInvocation  go to state 54


State 80

   27 statement: LBRACE state_SEMI RBRACE .

    $default  reduce using rule 27 (statement)


State 81

   49 expr: expr . OR expr
   50     | expr . AND expr
   51     | expr . LT expr
   52     | expr . GT expr
   53     | expr . EQ expr
   54     | expr . NE expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . PLUS expr
   58     | expr . MINUS expr
   59     | expr . STAR expr
   60     | expr . DIV expr
   61     | expr . MOD expr
   63     | MINUS expr .

    STAR  shift, and go to state 86
    DIV   shift, and go to state 87
    MOD   shift, and go to state 93

    $default  reduce using rule 63 (expr)


State 82

   49 expr: expr . OR expr
   50     | expr . AND expr
   51     | expr . LT expr
   52     | expr . GT expr
   53     | expr . EQ expr
   54     | expr . NE expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . PLUS expr
   58     | expr . MINUS expr
   59     | expr . STAR expr
   60     | expr . DIV expr
   61     | expr . MOD expr
   64     | PLUS expr .

    STAR  shift, and go to state 86
    DIV   shift, and go to state 87
    MOD   shift, and go to state 93

    $default  reduce using rule 64 (expr)


State 83

   70 expr: LPAR error . RPAR

    RPAR  shift, and go to state 111


State 84

   49 expr: expr . OR expr
   50     | expr . AND expr
   51     | expr . LT expr
   52     | expr . GT expr
   53     | expr . EQ expr
   54     | expr . NE expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . PLUS expr
   58     | expr . MINUS expr
   59     | expr . STAR expr
   60     | expr . DIV expr
   61     | expr . MOD expr
   69     | LPAR expr . RPAR

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    EQ     shift, and go to state 90
    GE     shift, and go to state 91
    LE     shift, and go to state 92
    MOD    shift, and go to state 93
    NE     shift, and go to state 94
    AND    shift, and go to state 95
    OR     shift, and go to state 96
    RPAR   shift, and go to state 112
    GT     shift, and go to state 97
    LT     shift, and go to state 98


State 85

   49 expr: expr . OR expr
   50     | expr . AND expr
   51     | expr . LT expr
   52     | expr . GT expr
   53     | expr . EQ expr
   54     | expr . NE expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . PLUS expr
   58     | expr . MINUS expr
   59     | expr . STAR expr
   60     | expr . DIV expr
   61     | expr . MOD expr
   62     | NOT expr .

    $default  reduce using rule 62 (expr)


State 86

   59 expr: expr STAR . expr

    MINUS    shift, and go to state 60
    PLUS     shift, and go to state 61
    LPAR     shift, and go to state 62
    NOT      shift, and go to state 63
    ID       shift, and go to state 64
    REALLIT  shift, and go to state 65
    INTLIT   shift, and go to state 66

    funcInvocation  go to state 67
    expr            go to state 113


State 87

   60 expr: expr DIV . expr

    MINUS    shift, and go to state 60
    PLUS     shift, and go to state 61
    LPAR     shift, and go to state 62
    NOT      shift, and go to state 63
    ID       shift, and go to state 64
    REALLIT  shift, and go to state 65
    INTLIT   shift, and go to state 66

    funcInvocation  go to state 67
    expr            go to state 114


State 88

   58 expr: expr MINUS . expr

    MINUS    shift, and go to state 60
    PLUS     shift, and go to state 61
    LPAR     shift, and go to state 62
    NOT      shift, and go to state 63
    ID       shift, and go to state 64
    REALLIT  shift, and go to state 65
    INTLIT   shift, and go to state 66

    funcInvocation  go to state 67
    expr            go to state 115


State 89

   57 expr: expr PLUS . expr

    MINUS    shift, and go to state 60
    PLUS     shift, and go to state 61
    LPAR     shift, and go to state 62
    NOT      shift, and go to state 63
    ID       shift, and go to state 64
    REALLIT  shift, and go to state 65
    INTLIT   shift, and go to state 66

    funcInvocation  go to state 67
    expr            go to state 116


State 90

   53 expr: expr EQ . expr

    MINUS    shift, and go to state 60
    PLUS     shift, and go to state 61
    LPAR     shift, and go to state 62
    NOT      shift, and go to state 63
    ID       shift, and go to state 64
    REALLIT  shift, and go to state 65
    INTLIT   shift, and go to state 66

    funcInvocation  go to state 67
    expr            go to state 117


State 91

   56 expr: expr GE . expr

    MINUS    shift, and go to state 60
    PLUS     shift, and go to state 61
    LPAR     shift, and go to state 62
    NOT      shift, and go to state 63
    ID       shift, and go to state 64
    REALLIT  shift, and go to state 65
    INTLIT   shift, and go to state 66

    funcInvocation  go to state 67
    expr            go to state 118


State 92

   55 expr: expr LE . expr

    MINUS    shift, and go to state 60
    PLUS     shift, and go to state 61
    LPAR     shift, and go to state 62
    NOT      shift, and go to state 63
    ID       shift, and go to state 64
    REALLIT  shift, and go to state 65
    INTLIT   shift, and go to state 66

    funcInvocation  go to state 67
    expr            go to state 119


State 93

   61 expr: expr MOD . expr

    MINUS    shift, and go to state 60
    PLUS     shift, and go to state 61
    LPAR     shift, and go to state 62
    NOT      shift, and go to state 63
    ID       shift, and go to state 64
    REALLIT  shift, and go to state 65
    INTLIT   shift, and go to state 66

    funcInvocation  go to state 67
    expr            go to state 120


State 94

   54 expr: expr NE . expr

    MINUS    shift, and go to state 60
    PLUS     shift, and go to state 61
    LPAR     shift, and go to state 62
    NOT      shift, and go to state 63
    ID       shift, and go to state 64
    REALLIT  shift, and go to state 65
    INTLIT   shift, and go to state 66

    funcInvocation  go to state 67
    expr            go to state 121


State 95

   50 expr: expr AND . expr

    MINUS    shift, and go to state 60
    PLUS     shift, and go to state 61
    LPAR     shift, and go to state 62
    NOT      shift, and go to state 63
    ID       shift, and go to state 64
    REALLIT  shift, and go to state 65
    INTLIT   shift, and go to state 66

    funcInvocation  go to state 67
    expr            go to state 122


State 96

   49 expr: expr OR . expr

    MINUS    shift, and go to state 60
    PLUS     shift, and go to state 61
    LPAR     shift, and go to state 62
    NOT      shift, and go to state 63
    ID       shift, and go to state 64
    REALLIT  shift, and go to state 65
    INTLIT   shift, and go to state 66

    funcInvocation  go to state 67
    expr            go to state 123


State 97

   52 expr: expr GT . expr

    MINUS    shift, and go to state 60
    PLUS     shift, and go to state 61
    LPAR     shift, and go to state 62
    NOT      shift, and go to state 63
    ID       shift, and go to state 64
    REALLIT  shift, and go to state 65
    INTLIT   shift, and go to state 66

    funcInvocation  go to state 67
    expr            go to state 124


State 98

   51 expr: expr LT . expr

    MINUS    shift, and go to state 60
    PLUS     shift, and go to state 61
    LPAR     shift, and go to state 62
    NOT      shift, and go to state 63
    ID       shift, and go to state 64
    REALLIT  shift, and go to state 65
    INTLIT   shift, and go to state 66

    funcInvocation  go to state 67
    expr            go to state 125


State 99

   31 statement: FOR LBRACE state_SEMI . RBRACE

    RBRACE  shift, and go to state 126


State 100

   30 statement: FOR expr LBRACE . state_SEMI RBRACE

    error   shift, and go to state 42
    LBRACE  shift, and go to state 44
    RETURN  shift, and go to state 46
    FOR     shift, and go to state 47
    IF      shift, and go to state 48
    PRINT   shift, and go to state 49
    ID      shift, and go to state 50

    RBRACE  reduce using rule 41 (state_SEMI)

    statement       go to state 58
    state_SEMI      go to state 127
    parseArgs       go to state 53
    funcInvocation  go to state 54


State 101

   28 statement: IF expr LBRACE . state_SEMI RBRACE
   29          | IF expr LBRACE . state_SEMI RBRACE ELSE LBRACE state_SEMI RBRACE

    error   shift, and go to state 42
    LBRACE  shift, and go to state 44
    RETURN  shift, and go to state 46
    FOR     shift, and go to state 47
    IF      shift, and go to state 48
    PRINT   shift, and go to state 49
    ID      shift, and go to state 50

    RBRACE  reduce using rule 41 (state_SEMI)

    statement       go to state 58
    state_SEMI      go to state 128
    parseArgs       go to state 53
    funcInvocation  go to state 54


State 102

   36 statement: PRINT LPAR STRLIT . RPAR

    RPAR  shift, and go to state 129


State 103

   37 statement: PRINT LPAR expr . RPAR
   49 expr: expr . OR expr
   50     | expr . AND expr
   51     | expr . LT expr
   52     | expr . GT expr
   53     | expr . EQ expr
   54     | expr . NE expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . PLUS expr
   58     | expr . MINUS expr
   59     | expr . STAR expr
   60     | expr . DIV expr
   61     | expr . MOD expr

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    EQ     shift, and go to state 90
    GE     shift, and go to state 91
    LE     shift, and go to state 92
    MOD    shift, and go to state 93
    NE     shift, and go to state 94
    AND    shift, and go to state 95
    OR     shift, and go to state 96
    RPAR   shift, and go to state 130
    GT     shift, and go to state 97
    LT     shift, and go to state 98


State 104

   42 parseArgs: ID COMMA BLANKID . ASSIGN PARSEINT LPAR CMDARGS LSQ expr RSQ RPAR
   43          | ID COMMA BLANKID . ASSIGN PARSEINT LPAR error RPAR

    ASSIGN  shift, and go to state 131


State 105

   46 funcInvocation: ID LPAR error . RPAR

    RPAR  shift, and go to state 132


State 106

   44 funcInvocation: ID LPAR RPAR .

    $default  reduce using rule 44 (funcInvocation)


State 107

   45 funcInvocation: ID LPAR expr . comma_Expr RPAR
   49 expr: expr . OR expr
   50     | expr . AND expr
   51     | expr . LT expr
   52     | expr . GT expr
   53     | expr . EQ expr
   54     | expr . NE expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . PLUS expr
   58     | expr . MINUS expr
   59     | expr . STAR expr
   60     | expr . DIV expr
   61     | expr . MOD expr

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    EQ     shift, and go to state 90
    GE     shift, and go to state 91
    LE     shift, and go to state 92
    MOD    shift, and go to state 93
    NE     shift, and go to state 94
    AND    shift, and go to state 95
    OR     shift, and go to state 96
    GT     shift, and go to state 97
    LT     shift, and go to state 98

    $default  reduce using rule 47 (comma_Expr)

    comma_Expr  go to state 133


State 108

   26 statement: ID ASSIGN expr .
   49 expr: expr . OR expr
   50     | expr . AND expr
   51     | expr . LT expr
   52     | expr . GT expr
   53     | expr . EQ expr
   54     | expr . NE expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . PLUS expr
   58     | expr . MINUS expr
   59     | expr . STAR expr
   60     | expr . DIV expr
   61     | expr . MOD expr

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    EQ     shift, and go to state 90
    GE     shift, and go to state 91
    LE     shift, and go to state 92
    MOD    shift, and go to state 93
    NE     shift, and go to state 94
    AND    shift, and go to state 95
    OR     shift, and go to state 96
    GT     shift, and go to state 97
    LT     shift, and go to state 98

    $default  reduce using rule 26 (statement)


State 109

   20 comma_ID_Type: comma_ID_Type COMMA ID type .

    $default  reduce using rule 20 (comma_ID_Type)


State 110

   40 state_SEMI: statement SEMICOLON state_SEMI .

    $default  reduce using rule 40 (state_SEMI)


State 111

   70 expr: LPAR error RPAR .

    $default  reduce using rule 70 (expr)


State 112

   69 expr: LPAR expr RPAR .

    $default  reduce using rule 69 (expr)


State 113

   49 expr: expr . OR expr
   50     | expr . AND expr
   51     | expr . LT expr
   52     | expr . GT expr
   53     | expr . EQ expr
   54     | expr . NE expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . PLUS expr
   58     | expr . MINUS expr
   59     | expr . STAR expr
   59     | expr STAR expr .
   60     | expr . DIV expr
   61     | expr . MOD expr

    $default  reduce using rule 59 (expr)


State 114

   49 expr: expr . OR expr
   50     | expr . AND expr
   51     | expr . LT expr
   52     | expr . GT expr
   53     | expr . EQ expr
   54     | expr . NE expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . PLUS expr
   58     | expr . MINUS expr
   59     | expr . STAR expr
   60     | expr . DIV expr
   60     | expr DIV expr .
   61     | expr . MOD expr

    $default  reduce using rule 60 (expr)


State 115

   49 expr: expr . OR expr
   50     | expr . AND expr
   51     | expr . LT expr
   52     | expr . GT expr
   53     | expr . EQ expr
   54     | expr . NE expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . PLUS expr
   58     | expr . MINUS expr
   58     | expr MINUS expr .
   59     | expr . STAR expr
   60     | expr . DIV expr
   61     | expr . MOD expr

    STAR  shift, and go to state 86
    DIV   shift, and go to state 87
    MOD   shift, and go to state 93

    $default  reduce using rule 58 (expr)


State 116

   49 expr: expr . OR expr
   50     | expr . AND expr
   51     | expr . LT expr
   52     | expr . GT expr
   53     | expr . EQ expr
   54     | expr . NE expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . PLUS expr
   57     | expr PLUS expr .
   58     | expr . MINUS expr
   59     | expr . STAR expr
   60     | expr . DIV expr
   61     | expr . MOD expr

    STAR  shift, and go to state 86
    DIV   shift, and go to state 87
    MOD   shift, and go to state 93

    $default  reduce using rule 57 (expr)


State 117

   49 expr: expr . OR expr
   50     | expr . AND expr
   51     | expr . LT expr
   52     | expr . GT expr
   53     | expr . EQ expr
   53     | expr EQ expr .
   54     | expr . NE expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . PLUS expr
   58     | expr . MINUS expr
   59     | expr . STAR expr
   60     | expr . DIV expr
   61     | expr . MOD expr

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    MOD    shift, and go to state 93

    $default  reduce using rule 53 (expr)


State 118

   49 expr: expr . OR expr
   50     | expr . AND expr
   51     | expr . LT expr
   52     | expr . GT expr
   53     | expr . EQ expr
   54     | expr . NE expr
   55     | expr . LE expr
   56     | expr . GE expr
   56     | expr GE expr .
   57     | expr . PLUS expr
   58     | expr . MINUS expr
   59     | expr . STAR expr
   60     | expr . DIV expr
   61     | expr . MOD expr

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    MOD    shift, and go to state 93

    $default  reduce using rule 56 (expr)


State 119

   49 expr: expr . OR expr
   50     | expr . AND expr
   51     | expr . LT expr
   52     | expr . GT expr
   53     | expr . EQ expr
   54     | expr . NE expr
   55     | expr . LE expr
   55     | expr LE expr .
   56     | expr . GE expr
   57     | expr . PLUS expr
   58     | expr . MINUS expr
   59     | expr . STAR expr
   60     | expr . DIV expr
   61     | expr . MOD expr

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    MOD    shift, and go to state 93

    $default  reduce using rule 55 (expr)


State 120

   49 expr: expr . OR expr
   50     | expr . AND expr
   51     | expr . LT expr
   52     | expr . GT expr
   53     | expr . EQ expr
   54     | expr . NE expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . PLUS expr
   58     | expr . MINUS expr
   59     | expr . STAR expr
   60     | expr . DIV expr
   61     | expr . MOD expr
   61     | expr MOD expr .

    $default  reduce using rule 61 (expr)


State 121

   49 expr: expr . OR expr
   50     | expr . AND expr
   51     | expr . LT expr
   52     | expr . GT expr
   53     | expr . EQ expr
   54     | expr . NE expr
   54     | expr NE expr .
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . PLUS expr
   58     | expr . MINUS expr
   59     | expr . STAR expr
   60     | expr . DIV expr
   61     | expr . MOD expr

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    MOD    shift, and go to state 93

    $default  reduce using rule 54 (expr)


State 122

   49 expr: expr . OR expr
   50     | expr . AND expr
   50     | expr AND expr .
   51     | expr . LT expr
   52     | expr . GT expr
   53     | expr . EQ expr
   54     | expr . NE expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . PLUS expr
   58     | expr . MINUS expr
   59     | expr . STAR expr
   60     | expr . DIV expr
   61     | expr . MOD expr

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    EQ     shift, and go to state 90
    GE     shift, and go to state 91
    LE     shift, and go to state 92
    MOD    shift, and go to state 93
    NE     shift, and go to state 94
    GT     shift, and go to state 97
    LT     shift, and go to state 98

    $default  reduce using rule 50 (expr)


State 123

   49 expr: expr . OR expr
   49     | expr OR expr .
   50     | expr . AND expr
   51     | expr . LT expr
   52     | expr . GT expr
   53     | expr . EQ expr
   54     | expr . NE expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . PLUS expr
   58     | expr . MINUS expr
   59     | expr . STAR expr
   60     | expr . DIV expr
   61     | expr . MOD expr

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    EQ     shift, and go to state 90
    GE     shift, and go to state 91
    LE     shift, and go to state 92
    MOD    shift, and go to state 93
    NE     shift, and go to state 94
    AND    shift, and go to state 95
    GT     shift, and go to state 97
    LT     shift, and go to state 98

    $default  reduce using rule 49 (expr)


State 124

   49 expr: expr . OR expr
   50     | expr . AND expr
   51     | expr . LT expr
   52     | expr . GT expr
   52     | expr GT expr .
   53     | expr . EQ expr
   54     | expr . NE expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . PLUS expr
   58     | expr . MINUS expr
   59     | expr . STAR expr
   60     | expr . DIV expr
   61     | expr . MOD expr

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    MOD    shift, and go to state 93

    $default  reduce using rule 52 (expr)


State 125

   49 expr: expr . OR expr
   50     | expr . AND expr
   51     | expr . LT expr
   51     | expr LT expr .
   52     | expr . GT expr
   53     | expr . EQ expr
   54     | expr . NE expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . PLUS expr
   58     | expr . MINUS expr
   59     | expr . STAR expr
   60     | expr . DIV expr
   61     | expr . MOD expr

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    MOD    shift, and go to state 93

    $default  reduce using rule 51 (expr)


State 126

   31 statement: FOR LBRACE state_SEMI RBRACE .

    $default  reduce using rule 31 (statement)


State 127

   30 statement: FOR expr LBRACE state_SEMI . RBRACE

    RBRACE  shift, and go to state 134


State 128

   28 statement: IF expr LBRACE state_SEMI . RBRACE
   29          | IF expr LBRACE state_SEMI . RBRACE ELSE LBRACE state_SEMI RBRACE

    RBRACE  shift, and go to state 135


State 129

   36 statement: PRINT LPAR STRLIT RPAR .

    $default  reduce using rule 36 (statement)


State 130

   37 statement: PRINT LPAR expr RPAR .

    $default  reduce using rule 37 (statement)


State 131

   42 parseArgs: ID COMMA BLANKID ASSIGN . PARSEINT LPAR CMDARGS LSQ expr RSQ RPAR
   43          | ID COMMA BLANKID ASSIGN . PARSEINT LPAR error RPAR

    PARSEINT  shift, and go to state 136


State 132

   46 funcInvocation: ID LPAR error RPAR .

    $default  reduce using rule 46 (funcInvocation)


State 133

   45 funcInvocation: ID LPAR expr comma_Expr . RPAR
   48 comma_Expr: comma_Expr . COMMA expr

    COMMA  shift, and go to state 137
    RPAR   shift, and go to state 138


State 134

   30 statement: FOR expr LBRACE state_SEMI RBRACE .

    $default  reduce using rule 30 (statement)


State 135

   28 statement: IF expr LBRACE state_SEMI RBRACE .
   29          | IF expr LBRACE state_SEMI RBRACE . ELSE LBRACE state_SEMI RBRACE

    ELSE  shift, and go to state 139

    $default  reduce using rule 28 (statement)


State 136

   42 parseArgs: ID COMMA BLANKID ASSIGN PARSEINT . LPAR CMDARGS LSQ expr RSQ RPAR
   43          | ID COMMA BLANKID ASSIGN PARSEINT . LPAR error RPAR

    LPAR  shift, and go to state 140


State 137

   48 comma_Expr: comma_Expr COMMA . expr

    MINUS    shift, and go to state 60
    PLUS     shift, and go to state 61
    LPAR     shift, and go to state 62
    NOT      shift, and go to state 63
    ID       shift, and go to state 64
    REALLIT  shift, and go to state 65
    INTLIT   shift, and go to state 66

    funcInvocation  go to state 67
    expr            go to state 141


State 138

   45 funcInvocation: ID LPAR expr comma_Expr RPAR .

    $default  reduce using rule 45 (funcInvocation)


State 139

   29 statement: IF expr LBRACE state_SEMI RBRACE ELSE . LBRACE state_SEMI RBRACE

    LBRACE  shift, and go to state 142


State 140

   42 parseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR . CMDARGS LSQ expr RSQ RPAR
   43          | ID COMMA BLANKID ASSIGN PARSEINT LPAR . error RPAR

    error    shift, and go to state 143
    CMDARGS  shift, and go to state 144


State 141

   48 comma_Expr: comma_Expr COMMA expr .
   49 expr: expr . OR expr
   50     | expr . AND expr
   51     | expr . LT expr
   52     | expr . GT expr
   53     | expr . EQ expr
   54     | expr . NE expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . PLUS expr
   58     | expr . MINUS expr
   59     | expr . STAR expr
   60     | expr . DIV expr
   61     | expr . MOD expr

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    EQ     shift, and go to state 90
    GE     shift, and go to state 91
    LE     shift, and go to state 92
    MOD    shift, and go to state 93
    NE     shift, and go to state 94
    AND    shift, and go to state 95
    OR     shift, and go to state 96
    GT     shift, and go to state 97
    LT     shift, and go to state 98

    $default  reduce using rule 48 (comma_Expr)


State 142

   29 statement: IF expr LBRACE state_SEMI RBRACE ELSE LBRACE . state_SEMI RBRACE

    error   shift, and go to state 42
    LBRACE  shift, and go to state 44
    RETURN  shift, and go to state 46
    FOR     shift, and go to state 47
    IF      shift, and go to state 48
    PRINT   shift, and go to state 49
    ID      shift, and go to state 50

    RBRACE  reduce using rule 41 (state_SEMI)

    statement       go to state 58
    state_SEMI      go to state 145
    parseArgs       go to state 53
    funcInvocation  go to state 54


State 143

   43 parseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR error . RPAR

    RPAR  shift, and go to state 146


State 144

   42 parseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS . LSQ expr RSQ RPAR

    LSQ  shift, and go to state 147


State 145

   29 statement: IF expr LBRACE state_SEMI RBRACE ELSE LBRACE state_SEMI . RBRACE

    RBRACE  shift, and go to state 148


State 146

   43 parseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR .

    $default  reduce using rule 43 (parseArgs)


State 147

   42 parseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ . expr RSQ RPAR

    MINUS    shift, and go to state 60
    PLUS     shift, and go to state 61
    LPAR     shift, and go to state 62
    NOT      shift, and go to state 63
    ID       shift, and go to state 64
    REALLIT  shift, and go to state 65
    INTLIT   shift, and go to state 66

    funcInvocation  go to state 67
    expr            go to state 149


State 148

   29 statement: IF expr LBRACE state_SEMI RBRACE ELSE LBRACE state_SEMI RBRACE .

    $default  reduce using rule 29 (statement)


State 149

   42 parseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ expr . RSQ RPAR
   49 expr: expr . OR expr
   50     | expr . AND expr
   51     | expr . LT expr
   52     | expr . GT expr
   53     | expr . EQ expr
   54     | expr . NE expr
   55     | expr . LE expr
   56     | expr . GE expr
   57     | expr . PLUS expr
   58     | expr . MINUS expr
   59     | expr . STAR expr
   60     | expr . DIV expr
   61     | expr . MOD expr

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    EQ     shift, and go to state 90
    GE     shift, and go to state 91
    LE     shift, and go to state 92
    MOD    shift, and go to state 93
    NE     shift, and go to state 94
    AND    shift, and go to state 95
    OR     shift, and go to state 96
    RSQ    shift, and go to state 150
    GT     shift, and go to state 97
    LT     shift, and go to state 98


State 150

   42 parseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ expr RSQ . RPAR

    RPAR  shift, and go to state 151


State 151

   42 parseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ expr RSQ RPAR .

    $default  reduce using rule 42 (parseArgs)
